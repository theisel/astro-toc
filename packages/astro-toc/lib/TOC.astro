---
import type { TocProps } from "./types";

type Props = TocProps & astroHTML.JSX.HTMLAttributes;

const { toc, depth = 1, ...props } = Astro.props;
const { as = "bullet", use: Cmp, maxDepth, ...attrs } = props;
const headings = toc.filter((it) => it.depth === depth);
const Tag = "bullet" === as ? "ul" : "number" === as ? "ol" : "menu";
---

<Tag data-astro-toc={depth} {...attrs}>
  {
    headings.map((it, idx) => {
      const nextHeading = headings[idx + 1];
      const subHeadings = toc.slice(toc.indexOf(it) + 1, nextHeading ? toc.indexOf(nextHeading) : undefined);
      const shouldRenderSubHeadings = maxDepth ? maxDepth > it.depth : subHeadings.length > 0;

      return (
        <li data-astro-toc={depth}>
          {Cmp ? <Cmp {...it} /> : it.url ? <a href={it.url}>{it.title}</a> : it.title}
          {shouldRenderSubHeadings && <Astro.self toc={subHeadings} depth={it.depth + 1} {...props} />}
        </li>
      );
    })
  }
</Tag>
